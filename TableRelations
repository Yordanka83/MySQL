CREATE TABLE persons (
person_id INT, 
first_name VARCHAR (255),
salary DECIMAL (10,2),
passport_id INT,
CONSTRAINT pk_person PRIMARY KEY (person_id)
);

CREATE TABLE passports (
passport_id INT UNIQUE,
passport_number VARCHAR (255)
);

ALTER TABLE passports
ADD CONSTRAINT pk_passports PRIMARY KEY (passport_id);

ALTER TABLE persons
MODIFY passport_id INT UNIQUE,
ADD CONSTRAINT fk_person_passports
FOREIGN KEY(passport_id)
REFERENCES passports(passport_id);

INSERT INTO passports
VALUES (101, 'N34FG21B'),
(102, 'K65LO4R7'),
(103, 'ZE657QP2');

INSERT INTO persons
VALUES(1, 'Roberto', 43300.00, 102),
(2, 'Tom', 56100.00, 103),
(3, 'Yana', 60200.00, 101);

#2
CREATE TABLE manufacturers(
`manufacturer_id` INT,
`name` VARCHAR(255),
`established_on` datetime
);
CREATE TABLE models(
`model_id` INT,
`name` VARCHAR(255),
`manufacturer_id` INT);

ALTER TABLE manufacturers 
ADD CONSTRAINT pk_manufacturer PRIMARY KEY(manufacturer_id);

ALTER TABLE models
ADD CONSTRAINT pk_model PRIMARY KEY(model_id);

ALTER TABLE models
ADD CONSTRAINT fk_models_manufacturers
FOREIGN KEY(manufacturer_id)
REFERENCES manufacturers(manufacturer_id);

ALTER TABLE manufacturers
MODIFY `established_on` date;

INSERT INTO manufacturers
VALUES (1, 'BMW', '1916-03-01'),
(2, 'Tesla', '2003-01-01'),
(3, 'Lada', '1966-05-01');

INSERT INTO models
VALUES (101, 'X1', 1),
(102, 'i6', 1),
(103, 'Model S', 2),
(104, 'Model X', 2),
(105, 'Model 3', 2),
(106, 'Nova', 3);

#3
CREATE TABLE students(
`student_id` INT,
`name` VARCHAR(255) );

CREATE TABLE exams (
`exam_id` INT,
`name` VARCHAR(255));

CREATE TABLE students_exams (
`student_id` INT,
`exam_id` INT);
INSERT INTO students VALUES 
(1, 'Mila'),
(2, 'Toni'),
(3, 'Ron');
INSERT INTO exams VALUES
(101, 'Spring MVC'),
(102, 'Neo4j'),
(103, 'Oracle 11g');
INSERT INTO students_exams VALUES
(1, 101),
(1, 102),
(2, 101),
(3, 103),
(2, 102),
(2, 103);

ALTER TABLE students
ADD CONSTRAINT pk_student PRIMARY KEY(student_id);
ALTER TABLE exams
ADD CONSTRAINT pk_exam PRIMARY KEY(exam_id);

ALTER TABLE students_exams
ADD CONSTRAINT pk_student_exam
PRIMARY KEY(exam_id,student_id),
ADD CONSTRAINT fk_student_students_exams
FOREIGN KEY(student_id)
REFERENCES students(student_id),
ADD CONSTRAINT fk_exams_students_exams
FOREIGN KEY (exam_id)
REFERENCES exams(exam_id);

#4
CREATE TABLE teachers(
`teacher_id` INT,
`name` VARCHAR(255),
`manager_id` INT);

INSERT INTO teachers 
VALUES (101, 'John', NULL),
(102, 'Maya', 106),
(103, 'Silvia', 106),
(104, 'Ted', 105),
(105, 'Mark', 101),
(106, 'Greta', 101);

ALTER TABLE teachers
ADD CONSTRAINT pk_teacher PRIMARY KEY(teacher_id);

ALTER TABLE teachers
ADD CONSTRAINT fk_techar_teachers 
FOREIGN KEY(manager_id) REFERENCES teachers(teacher_id);

#5
CREATE DATABASE onlaine_store;
USE onlain_store;

CREATE TABLE cities(
`city_id` INT PRIMARY KEY AUTO_INCREMENT,
`name` VARCHAR(50));


CREATE TABLE orders(
`order_id` INT PRIMARY KEY AUTO_INCREMENT,
`customer_id` INT);

CREATE TABLE customers (
`customer_id` INT PRIMARY KEY AUTO_INCREMENT,
`name` VARCHAR(50),
`birthday` DATE,
`city_id` INT,
CONSTRAINT fk_customers_cities
FOREIGN KEY (city_id) REFERENCES cities(city_id));

ALTER TABLE orders
ADD CONSTRAINT fk_orders_customers
FOREIGN KEY (customer_id) REFERENCES customers(customer_id); 

CREATE TABLE item_types (
item_type_id INT PRIMARY KEY AUTO_INCREMENT,
`name` VARCHAR(50));

CREATE TABLE items(
item_id INT PRIMARY KEY AUTO_INCREMENT,
`name` VARCHAR(50),
`item_type_id` INT,
CONSTRAINT fk_items_item_types
FOREIGN KEY (item_type_id) REFERENCES item_types(item_type_id));

CREATE TABLE order_items (
`order_id` INT NOT NULL,
`item_id` INT NOT NULL,

CONSTRAINT pk_order_items
PRIMARY KEY (order_id, item_id),
CONSTRAINT fk_orderItem_orders
FOREIGN KEY (order_id) REFERENCES orders(order_id),
CONSTRAINT fk_orderItem_items
FOREIGN KEY (item_id) REFERENCES items(item_id)
);
 
 # Database/References Enginer избираме таблицата която искаме да визуализираме в диаграма
 
 #6
 CREATE DATABASE `university`;
 USE `university`;
 
 CREATE TABLE payments(
 `payment_id` INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
 `payment_date` DATE,
 `payment_amount` DECIMAL(8,2),
 `student_id` INT );
 
 CREATE TABLE `students`(
 `student_id` INT PRIMARY KEY,
 `student_number` VARCHAR (12),
 `student_name` VARCHAR (50),
 `major_id` INT
 );
 ALTER TABLE payments
 ADD CONSTRAINT fk_students_payments
 FOREIGN KEY (student_id) REFERENCES students(student_id);
 
 CREATE TABLE `majors`(
 `major_id` INT PRIMARY KEY NOT NULL,
 `name` VARCHAR(50));
 
 ALTER TABLE students
 ADD CONSTRAINT fk_majors_students
 FOREIGN KEY (major_id) REFERENCES majors(major_id);
 
 CREATE TABLE `subjects`(
 `subject_id` INT PRIMARY KEY NOT NULL,
 `subject_name` VARCHAR (50));

CREATE TABLE `agenda`(
`student_id` INT,
`subject_id` INT,
CONSTRAINT pk_students_subjects
PRIMARY KEY (student_id, subject_id),
CONSTRAINT fk_students_agenda
FOREIGN KEY (student_id) REFERENCES students(student_id),
CONSTRAINT fk_subject_agenda
FOREIGN KEY (subject_id) REFERENCES subjects(subject_id)
);

#9
SELECT mountains.mountain_range, peaks.peak_name, peaks.elevation 
FROM mountains
INNER JOIN  peaks 
ON peaks.mountain_id = mountains.id
WHERE mountain_range like 'Rila'
ORDER BY peaks.elevation DESC;
