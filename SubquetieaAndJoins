SELECT e.employee_id, e.job_title, a.address_id, a.address_text
FROM employees AS e
INNER JOIN addresses AS a
ON e.address_id = a.address_id
ORDER BY a.address_id LIMIT 5;

#2
SELECT e.first_name, e.last_name, t.name, a.address_text
FROM employees AS e
INNER JOIN addresses AS a
ON e.address_id = a.address_id
INNER JOIN towns AS t
ON t.town_id = a.town_id
ORDER BY e.first_name, e.last_name LIMIT 5;

#3
SELECT e.employee_id, e.first_name, e.last_name, d.name AS 'department_name'
FROM employees AS e
INNER JOIN departments AS d
ON d.department_id = e.department_id
WHERE d.name LIKE 'Sales'
ORDER BY e.employee_id DESC;

#4
SELECT e.employee_id, e.first_name, e.salary, d.name AS 'department_name'
FROM employees AS e
INNER JOIN departments AS d
ON d.department_id = e.department_id
WHERE e.salary > 15000
ORDER BY e.department_id DESC limit 5;

#5
SELECT e.employee_id, e.first_name
FROM employees AS e
LEFT JOIN employees_projects AS ep
ON e.employee_id=ep.employee_id
WHERE ep.project_id IS NULL
ORDER BY e.employee_id DESC LIMIT 3;

#6
SELECT e.first_name, e.last_name, e.hire_date, d.name AS 'dept_name'
FROM employees AS e
INNER JOIN departments AS d
ON e.department_id=d.department_id
WHERE DATE(e.hire_date) > '1999-01-01' AND
d.name IN ('Sales', 'Finance')
ORDER BY e.hire_date;

#7
SELECT e.employee_id, e.first_name, p.name AS 'project_name'
FROM employees AS e
LEFT JOIN employees_projects AS ep
ON e.employee_id=ep.employee_id
INNER JOIN projects AS p
ON ep.project_id=p.project_id
WHERE p.end_date IS NULL AND
date(p.start_date) > '2002-08-13'
ORDER BY e.first_name, p.name limit 5;

#8
SELECT e.employee_id, e.first_name,
IF(p.start_date >='2005-01-01', NULL, p.name)
FROM employees AS e
INNER JOIN employees_projects AS ep
ON e.employee_id=ep.employee_id
INNER JOIN projects AS p
ON ep.project_id=p.project_id
WHERE e.employee_id=24 
ORDER BY p.name;


#9
SELECT e.employee_id, e.first_name, emp.employee_id, emp.first_name
FROM employees AS e
INNER JOIN employees AS emp
ON e.manager_id = emp.employee_id
WHERE e.manager_id IN (3,7)
ORDER BY e.first_name;

#10
SELECT e.employee_id,
CONCAT_WS(' ', e.first_name, e.last_name) AS 'employee_name',
CONCAT_WS(' ', emp.first_name, emp.last_name) AS 'manager_name', d.name
FROM employees AS e
INNER JOIN employees AS emp ON e.manager_id = emp.employee_id
INNER JOIN departments AS d ON e.department_id = d.department_id
ORDER BY e.employee_id LIMIT 5;

#11
SELECT MIN(min_av_salary) AS min_average_salary
FROM
(
SELECT AVG(salary) AS min_av_salary
FROM employees
GROUP BY department_id
) AS min_av_salary;

#12
SELECT mc.country_code, m.mountain_range, p.peak_name, p.elevation
FROM peaks AS p
INNER JOIN mountains_countries AS mc
ON p.mountain_id = mc.mountain_id
INNER JOIN mountains AS m
ON p.mountain_id = m.id
WHERE mc.country_code LIKE 'BG' AND p.elevation > 2835
ORDER BY p.elevation DESC;

#13
SELECT m.country_code, COUNT(m.mountain_id) AS mountain_range
FROM mountains_countries AS m
group by m.country_code
having  m.country_code IN ('US', 'BG', 'RU')
ORDER BY mountain_range DESC;

#14
SELECT c.country_name, r.river_name
FROM rivers AS r
right join countries_rivers AS cr
ON cr.river_id = r.id
right JOIN countries AS c 
ON cr.country_code = c.country_code
WHERE c.continent_code = 'AF'
ORDER BY c.country_name LIMIT 5;

#16
SELECT 
    ((SELECT COUNT(`country_code`)
        FROM `countries`) - 
        (SELECT DISTINCT COUNT(DISTINCT `country_code`)
        FROM `mountains_countries`)) AS `country_count`;
        
# Втори вариянт на задачатаalte
SELECT COUNT(c.country_code) as country_count
FROM countries as c
LEFT JOIN mountains_countries as mc 
ON c.country_code = mc.country_code
WHERE mc.mountain_id IS NULL;

#17
SELECT c.country_name, MAX(p.elevation) AS 'highest_peak_elevation',
max(r.length) AS 'longest_river_length'
FROM countries AS c 
left join mountains_countries AS mc
ON mc.country_code = c.country_code
left JOIN peaks AS p
ON p.mountain_id = mc.mountain_id
left join countries_rivers AS cr
ON cr.country_code= c.country_code
left join rivers AS r
ON r.id = cr.river_id 
group by c.country_name
ORDER BY highest_peak_elevation DESC, longest_river_length DESC, c.country_name limit 5;
